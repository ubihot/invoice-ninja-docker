version: '3.8'

services:
 app:
   build:
     context: .
     dockerfile: Dockerfile
   container_name: invoiceninja-app
   env_file:
     - ./.env
   volumes:
     - ./.env:/var/www/html/.env
     - ./config/php/php.ini:/usr/local/etc/php/conf.d/invoiceninja.ini:ro
     - ./config/php/php-fpm.conf:/usr/local/etc/php-fpm.d/invoiceninja.conf:ro
     - ./config/supervisor/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf:ro
     - ./invoiceninja/public:/var/www/html/public         # ðŸ‘ˆ bind mount che accoglierÃ  la build
     - app_storage:/var/www/html/storage
   networks:
     - app-network
   depends_on:
     db:
       condition: service_healthy
     redis:
       condition: service_healthy

 web:
   image: nginx:latest
   container_name: invoiceninja-web
   ports:
     - "80:80"
   volumes:
     - ./config/nginx/laravel.conf:/etc/nginx/conf.d/default.conf
     - ./invoiceninja:/var/www/html                        # ðŸ‘ˆ giÃ  include public/index.php e build/
   depends_on:
     - app
   networks:
     - app-network

 redis:
   image: redis:alpine
   container_name: invoiceninja-redis
   volumes:
     - redis_data:/data
   networks:
     - app-network
   healthcheck:
     test: [ "CMD", "redis-cli", "ping" ]
     interval: 10s
     timeout: 5s
     retries: 5

 db:
   image: mysql:8
   restart: unless-stopped
   env_file:
     - ./.env
   environment:
     MYSQL_DATABASE: ${DB_DATABASE}
     MYSQL_USER: ${DB_USERNAME}
     MYSQL_PASSWORD: ${DB_PASSWORD}
     MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
   volumes:
     - mysql_data:/var/lib/mysql
   networks:
     - app-network
   healthcheck:
     test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}" ]
     interval: 10s
     timeout: 5s
     retries: 5

networks:
 app-network:
   driver: bridge

volumes:
 app_storage:
   driver: local  
 mysql_data:
   driver: local
 redis_data:
   driver: local

